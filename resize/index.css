.resize-container {
  display: grid;
  overflow: hidden;
}
.resize-container.left {
  padding-left: var(--resize-controller-size);
}
.resize-container.right {
  padding-right: var(--resize-controller-size);
}
.resize-container.down {
  padding-bottom: var(--resize-controller-size);
}
.resize-container.up {
  padding-top: var(--resize-controller-size);
}

.resize-container::before {
  pointer-events: none;
}
.resize-container > :not(.resize-controller), .resize-container::before {
  z-index: 1;
}
.resize-container > *, .resize-container::before {
  grid-column: 1;
  grid-row: 1;
}
.resize-controller {
  overflow: scroll;
}
.resize-container.left > .resize-controller,
.resize-container.right > .resize-controller {
  resize: horizontal;
}
.resize-container.up > .resize-controller,
.resize-container.down > .resize-controller {
  resize: vertical;
}

.resize-container.left > .resize-controller {
  margin-left: calc(-1 * var(--resize-controller-size));
  transform: scaleX(-1);
}
.resize-container.right > .resize-controller {
  margin-right: calc(-1 * var(--resize-controller-size));
}
.resize-container.up > .resize-controller {
  margin-top: calc(-1 * var(--resize-controller-size));
  transform: scaleY(-1);
}
.resize-container.down > .resize-controller {
  margin-bottom: calc(-1 * var(--resize-controller-size));
}
.resize-container.left > .resize-controller::-webkit-scrollbar,
.resize-container.right > .resize-controller::-webkit-scrollbar {
  width: var(--resize-controller-size);
  height: 100vh;
}
.resize-container.up > .resize-controller::-webkit-scrollbar,
.resize-container.down > .resize-controller::-webkit-scrollbar {
  width: 100vw;
  height: var(--resize-controller-size);
}

.resize-controller::-webkit-resizer {
  opacity: 0;
}
