@mixin resizebar(
  $size: auto,
  $controller: ".resizebar_controller",
  $container: ".resizebar_container",
  $delimiter: "__",
  // Big enough values to have controller not less than container, while '100%' is not working
  $height: 100vh,
  $width: 100vw
) {
  #{$controller} {
    @include resizebar-controller-common();    
    @content;
  }

  #{$container}#{$delimiter} {
    &left {
      grid-template-areas: 'Bar Content';
      grid-template-columns: minmax($size, 1em) min-content /*NB! Not 1fr*/;
      & > #{$controller} {
        // By default scrolls are at right and bottom sides. Obvious transform for desired effect without
        transform: scaleX(-1);
      }  
    }
    @at-root #{$controller}#{$delimiter}left {
      transform: scaleX(-1);
    }    

    &top {
      grid-template-areas: 'Bar' 'Content';
      grid-template-rows: $size 1fr;
      & > #{$controller} {
        transform: scaleY(-1);
      }  
    }
    @at-root #{$controller}#{$delimiter}top {
      transform: scaleY(-1);
    }

    &right {
      grid-template-areas: 'Content Bar';
      grid-template-columns: 1fr $size;
      & > #{$controller} {
        justify-self: right;
      }  
    }
    @at-root #{$controller}#{$delimiter}right {
      justify-self: right;
    }


    &bottom {
      grid-template-areas: 'Content' 'Bar';
      grid-template-rows: 1fr $size;
      & > #{$controller} {
        align-self: end;
      }  
    }
    @at-root #{$controller}#{$delimiter}bottom {
      align-self: end;
    }

    $sides: left, right, top, bottom;
    @each $side in $sides {
      &#{$side} {
        // Container takes controller's width-height and propagate to children. Be careful with display: content;
        overflow: hidden;
        display: grid;
        &::before, &::after {
          grid-area: Bar;
          // NB: 'Controller' skin should be transparent for click- don't forget if own element is used 
          pointer-events: none;
        }

        & > *:not(#{$controller}) {
          grid-area: Content;
        }

        & > #{$controller} {
          grid-area: 1 / 1 / -1 / -1;
          @include resize-controller($side, $size, $width, $height) {
            @content;
          }    
        }

        @at-root #{$controller}#{$delimiter}#{$side} {
          @include resize-controller($side, $size, $width, $height) {
            @content;
          }
        }
      }
    }    
  }
}

@mixin resizebar-controller-common {
  // Check resizer.html to see why other options are not satisfying  
  overflow: scroll;

  // @content;
  // background-color: transparent;
  opacity: 0;

  // @content;

  &::-webkit-resizer {
    // opacity: 0;
    // background-color: transparent;
    // color: transparent;
  }  
} 

@mixin resize-controller($side, $size, $width, $height) {    
  @include resizebar-controller-common();
  @content;      
  $orientation: if($side == left or $side == right, horizontal, vertical); 
  resize: $orientation;
  @if ($orientation == horizontal) {
    min-width: $size;
    &::-webkit-scrollbar {
      width: #{$size};
      height: #{$height}; 
    }  
  } @else {
    min-height: $size;
    &::-webkit-scrollbar {
      width: #{$width};
      height: #{$size};
    }
  }
}